{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","findUser","userId","usersFromServer","find","todosData","App","useState","usertitle","setUserTitle","errorTitle","setErrorTitle","errorName","setErrorName","setUser","setTodos","handleChange","e","target","value","action","method","onSubmit","preventDefault","todoItem","Math","max","prevTodos","type","placeholder","onChange","disabled","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cff44441.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article key={id} data-id={id} className=\"TodoInfo TodoInfo--completed\">\n      <h2\n        className={classNames(\n          'TodoInfo', { 'TodoInfo--completed': completed },\n        )}\n      >\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './Types/Todo';\nimport './App.scss';\n\nexport const findUser = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId);\n};\n\nexport const todosData: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [usertitle, setUserTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [user, setUser] = useState(0);\n  const [todos, setTodos] = useState(todosData);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!usertitle) {\n      setErrorTitle(true);\n    }\n\n    if (!user) {\n      setErrorName(true);\n    }\n\n    if (!usertitle || !user) {\n      return;\n    }\n\n    const todoId = Math.max(...todosData.map(todo => todo.id)) + 1;\n\n    const todoItem = {\n      id: todoId,\n      title: usertitle,\n      userId: user,\n      completed: false,\n      user: findUser(user),\n    };\n\n    setTodos(prevTodos => [...prevTodos, todoItem]);\n    setUserTitle('');\n    setUser(0);\n  };\n\n  const handleChange\n    = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n      const { name, value } = e.target;\n\n      if (name === 'usertitle') {\n        setUserTitle(value);\n        setErrorTitle(false);\n      }\n\n      if (name === 'username') {\n        setUser(+value);\n        setErrorName(false);\n      }\n    };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            name=\"usertitle\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={usertitle}\n            onChange={handleChange}\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"username\"\n            value={user}\n            onChange={handleChange}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(currentUser => (\n              <option\n                key={currentUser.id}\n                value={currentUser.id}\n              >\n                {currentUser.name}\n              </option>\n            ))}\n          </select>\n\n          {errorName && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}